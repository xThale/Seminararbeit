% This file was created with Citavi 5.7.1.0

@proceedings{.2017,
 year = {2017},
 title = {A.P. Ershov Informatics Conference (the PSI Conference Series, 11th edition)},
 address = {Moscow, Russia}
}


@proceedings{.2018,
 year = {2018},
 title = {2018 IEEE International Conference on Software Architecture (ICSA)},
 publisher = {IEEE},
 isbn = {978-1-5386-6398-1}
}


@book{Buschmann.2013,
 abstract = {Pattern - Oriented Software Architecture A System of Patterns Frank Buschmann, Regine Meunier, Hans Rohnert, Peter Sommerlad, Michael Stal of Siemens AG, Germany Pattern-oriented software architecture is a new approach to software development. This book represents the progression and evolution of the pattern approach into a system of patterns capable of describing and documenting large-scale applications. A pattern system provides, on one level, a pool of proven solutions to many recurring design problems. On another it shows how to combine individual patterns into heterogeneous structures and as such it can be used to facilitate a constructive development of software systems. Uniquely, the patterns that are presented in this book span several levels of abstraction, from high-level architectural patterns and medium-level design patterns to low-level idioms. The intention of, and motivation for, this book is to support both novices and experts in software development. Novices will gain from the experience inherent in pattern descriptions and experts will hopefully make use of, add to, extend and modify patterns to tailor them to their own needs. None of the pattern descriptions are cast in stone and, just as they are borne from experience, it is expected that further use will feed in and refine individual patterns and produce an evolving system of patterns. Visit our Web Page http://www.wiley.com/compbooks/},
 author = {Buschmann, Frank and Meunier, Regine and Rohnert, Hans and Sommerlad, Peter and Stal, Michael},
 year = {2013},
 title = {Pattern-Oriented Software Architecture, A System of Patterns},
 url = {http://gbv.eblib.com/patron/FullRecord.aspx?p=700122},
 address = {s.l.},
 edition = {1. Aufl.},
 publisher = {Wiley},
 isbn = {978-0-471-95869-7},
 series = {Wiley Software Patterns Series}
}


@inproceedings{Chen.2018,
 author = {Chen, Lianping},
 title = {Microservices: Architecting for Continuous Delivery and DevOps},
 pages = {39--397},
 publisher = {IEEE},
 isbn = {978-1-5386-6398-1},
 booktitle = {2018 IEEE International Conference on Software Architecture (ICSA)},
 year = {2018},
 doi = {10.1109/ICSA.2018.00013}
}


@inproceedings{Dragoni.2017,
 author = {Dragoni, Nicola and Lanese, Ivan and Larsen, Stephan Thordal and Mazzara, Manuel and Mustafin, Ruslan and Safina, Larisa},
 title = {Microservices: How To Make Your Application Scale},
 url = {https://hal.inria.fr/hal-01636132},
 booktitle = {A.P. Ershov Informatics Conference (the PSI Conference Series, 11th edition)},
 year = {2017},
 address = {Moscow, Russia}
}


@misc{hex,
 author = {Alistair, Cockburn},
 title = {Hexagonal architecture},
 url = {https://alistair.cockburn.us/hexagonal-architecture/},
 urldate = {14.11.2021}
}


@book{Larman.2009,
 author = {Larman, Craig},
 year = {2009},
 title = {Applying UML and patterns: An introduction to object-oriented analysis and design and iterative development},
 address = {Upper Saddle River, NJ},
 edition = {3. ed., 12. print},
 publisher = {{Prentice Hall}},
 isbn = {978-0131489066}
}


@misc{layer.solid,
 author = {{Sylvia Fronczak}},
 title = {Layered Architecture: Still a Solid Approach},
 url = {https://blog.ndepend.com/layered-architecture-solid-approach/},
 urldate = {14.11.2021}
}


@book{Leavens.2000,
 year = {2000},
 title = {Foundations of component-based systems},
 address = {Cambridge},
 publisher = {{Cambridge Univ. Press}},
 isbn = {0-521-77164-1},
 editor = {Leavens, Gary T. and Sitaraman, Murali}
}


@misc{Martin.1996,
 author = {Martin, Robert C.},
 year = {1996},
 title = {The Dependency Inversion Principle},
 url = {https://web.archive.org/web/20110714224327/http://www.objectmentor.com/resources/articles/dip.pdf},
 urldate = {14.11.2021}
}


@book{Martin.2003,
 author = {Martin, Robert C.},
 year = {2003},
 title = {Agile software development: Principles, patterns, and practices},
 address = {Upper Saddle River, NJ},
 publisher = {{Pearson Education}},
 isbn = {978-0135974445},
 series = {Alan Apt series}
}


@book{Martin.2018,
 abstract = {Building upon the success of best-sellers The Clean Coder and Clean Code, legendary software craftsman Robert C. {\dq}Uncle Bob{\dq} Martin shows how to bring greater professionalism and discipline to application architecture and design. As with his other books, Martin's Clean Architecture doesn't merely present multiple choices and options, and say {\dq}use your best judgment{\dq}: it tells you what choices to make, and why those choices are critical to your success. Martin offers direct, no-nonsense answers to key architecture and design questions like: What are the best high level structures for different kinds of applications, including web, database, thick-client, console, and embedded apps? What are the core principles of software architecture? What is the role of the architect, and what is he/she really trying to achieve? What are the core principles of software design? How do designs and architectures go wrong, and what can you do about it? What are the disciplines and practices of professional architects and designers? Clean Architecture is essential reading for every software architect, systems analyst, system designer, and software manager -- and for any programmer who aspires to these roles or is impacted by their work},
 author = {Martin, Robert C.},
 year = {2018},
 title = {Clean architecture: A craftsman's guide to software structure and design},
 url = {http://proquest.tech.safaribooksonline.de/9780134494272},
 address = {Boston},
 publisher = {{Prentice Hall}},
 isbn = {9780134494166},
 series = {Robert C. Martin series}
}


@misc{martin.solid,
 author = {{Robert C. Martin}},
 title = {Design Principles and Design Patterns},
 url = {https://web.archive.org/web/20150906155800/http://www.objectmentor.com/resources/articles/Principles_and_Patterns.pdf},
 urldate = {14.11.2021}
}


@misc{martin.srp,
 author = {{Robert C. Martin}},
 title = {SRP: The Single Responsibility Principle},
 url = {https://web.archive.org/web/20150202200348/http://www.objectmentor.com/resources/articles/srp.pdf},
 urldate = {14.11.2021}
}


@book{Meyer.1993,
 author = {Meyer, Bertrand},
 year = {1993},
 title = {Object-oriented software construction},
 address = {New York},
 edition = {[Nachdr.]},
 publisher = {{Prentice Hall}},
 isbn = {0-13-629049-3},
 series = {Prentice Hall international series in computer science}
}


@book{Vernon.2015,
 author = {Vernon, Vaughn},
 year = {2015},
 title = {Implementing domain-driven design},
 address = {Upper Saddle River, NJ},
 edition = {Fourth printing},
 publisher = {Addison-Wesley},
 isbn = {9780321834577}
}


